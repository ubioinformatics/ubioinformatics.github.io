{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/","text":"De novo genome assembly of bacterial isolates A bit of context The data was picked randomly from NCBI, the genome we are going to assemble can be seen here: https://www.ncbi.nlm.nih.gov/nuccore/CP043733.1 and the raw reads are stored under SRR8095451 . This data is supposed to be an Escherichia Coli extracted from Pork, the bioproject PRJNA292663 description is the following: Whole genome sequencing of foodborne pathogens as part of the US Food and Drug Administration surveillance project for NARMS. Downloading the data Let's start downloading the raw reads: wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR809/001/SRR8095451/SRR8095451_1.fastq.gz wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR809/001/SRR8095451/SRR8095451_2.fastq.gz After finishing the download you can also decompress the reads: gzip -d SRR8095451_1.fastq.gz gzip -d SRR8095451_2.fastq.gz Quality Control Running FastQC fastqc SRR8095451_1.fastq SRR8095451_2.fastq You can see the full reports here: FastQC report R1 FastQC report R2 If your report looks different it's probably due to version difference, this one was generated by FastQC v0.11.9. The plots we are more interested for this exercise are the Per base sequence quality Running trimmomatic As you can see, the quality drops in the end of the reads, this is a well-known characteristic of short read sequencing from Illumina, to fix this we are going to run the raw reads over Trimmomatic: TrimmomaticPE SRR8095451_1.fastq SRR8095451_2.fastq paired_1.fq unpaired_1.fq paired_2.fq unpaired_2.fq SLIDINGWINDOW:4:20 MINLEN:100 With this command we are first removing sequences that gets a score lower than 20 and also any sequence with less than 100bp. Running fastqc again: fastqc paired_1.fq paired_2.fq Gives us the (nice) plots: K-mer genome size estimation jellyfish De-novo assembling Running spades Now that we have filtered the raw reads to a minimum quality threshold we can start assembling the genome: spades.py -1 paired_1.fq -2 paired_2.fq --isolate -o assembly And after a few minutes we should get our contigs:","title":"De novo genome assembly of bacterial isolates"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#de-novo-genome-assembly-of-bacterial-isolates","text":"","title":"De novo genome assembly of bacterial isolates"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#a-bit-of-context","text":"The data was picked randomly from NCBI, the genome we are going to assemble can be seen here: https://www.ncbi.nlm.nih.gov/nuccore/CP043733.1 and the raw reads are stored under SRR8095451 . This data is supposed to be an Escherichia Coli extracted from Pork, the bioproject PRJNA292663 description is the following: Whole genome sequencing of foodborne pathogens as part of the US Food and Drug Administration surveillance project for NARMS.","title":"A bit of context"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#downloading-the-data","text":"Let's start downloading the raw reads: wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR809/001/SRR8095451/SRR8095451_1.fastq.gz wget ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR809/001/SRR8095451/SRR8095451_2.fastq.gz After finishing the download you can also decompress the reads: gzip -d SRR8095451_1.fastq.gz gzip -d SRR8095451_2.fastq.gz","title":"Downloading the data"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#quality-control","text":"","title":"Quality Control"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#running-fastqc","text":"fastqc SRR8095451_1.fastq SRR8095451_2.fastq You can see the full reports here: FastQC report R1 FastQC report R2 If your report looks different it's probably due to version difference, this one was generated by FastQC v0.11.9. The plots we are more interested for this exercise are the Per base sequence quality","title":"Running FastQC"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#running-trimmomatic","text":"As you can see, the quality drops in the end of the reads, this is a well-known characteristic of short read sequencing from Illumina, to fix this we are going to run the raw reads over Trimmomatic: TrimmomaticPE SRR8095451_1.fastq SRR8095451_2.fastq paired_1.fq unpaired_1.fq paired_2.fq unpaired_2.fq SLIDINGWINDOW:4:20 MINLEN:100 With this command we are first removing sequences that gets a score lower than 20 and also any sequence with less than 100bp. Running fastqc again: fastqc paired_1.fq paired_2.fq Gives us the (nice) plots:","title":"Running trimmomatic"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#k-mer-genome-size-estimation","text":"jellyfish","title":"K-mer genome size estimation"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#de-novo-assembling","text":"","title":"De-novo assembling"},{"location":"articles/de-novo-genome-assembly-of-bacterial-isolates/#running-spades","text":"Now that we have filtered the raw reads to a minimum quality threshold we can start assembling the genome: spades.py -1 paired_1.fq -2 paired_2.fq --isolate -o assembly And after a few minutes we should get our contigs:","title":"Running spades"}]}